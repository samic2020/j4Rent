/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Movimento;

import Funcoes.Dates;
import Funcoes.DbMain;
import Funcoes.FuncoesGlobais;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

/**
 *
 * @author Samic
 */
public class jAuditor extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.conexao;
    
    /**
     * Creates new form jAuditor
     */
    public jAuditor() {
        initComponents();
        
        FillUsuarios();
        FillCategorias();
        FillOrigens();
        FillMaquinas();
        
        TableControl.header(aLista, new String[][] {{"usuario","categoria","origem","maquina","data/hora","novo"},{"100","130","100","100","130","300"}});
        aLista.addMouseMotionListener(new MouseMotionAdapter(){
           public void mouseMoved(MouseEvent e){
                Point p = e.getPoint(); 
                int row = aLista.rowAtPoint(p);
                int modelRow = aLista.convertRowIndexToModel(row);
                int column = aLista.columnAtPoint(p);
                aLista.setToolTipText(String.valueOf(aLista.getModel().getValueAt(modelRow,column)));
            }
        });
        
        aDataIni.setDate(Dates.primeiraDataMes(new Date()));
        aDataFim.setDate(Dates.ultimaDataMes(new Date()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        aUsuarios = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        aCategorias = new javax.swing.JComboBox<>();
        aOrigens = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        aMaquinas = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        aDataIni = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        jLabel6 = new javax.swing.JLabel();
        aDataFim = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        aBtnListar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        aLista = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Auditor do Sistema");
        setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel1.setText("Usuário:");

        jLabel2.setText("Categoria:");

        jLabel3.setText("Origem:");

        jLabel4.setText("Máquina:");

        jLabel5.setText("Periodo:");

        aDataIni.setDate(new java.util.Date(-2208977612000L));

        jLabel6.setText("até");

        aDataFim.setDate(new java.util.Date(-2208977612000L));

        aBtnListar.setText("Listar");
        aBtnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aBtnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aMaquinas, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(aCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aOrigens, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aBtnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(aUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(aCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(aOrigens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(aDataIni, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(aDataFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(aBtnListar)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aMaquinas, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        aLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(aLista);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aBtnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aBtnListarActionPerformed
        String sSql = "SELECT usuario, datahora, velho, novo, origem, maquina FROM " + 
          "auditor where " + 
          (aUsuarios.getSelectedIndex() == 0 ? "" : "usuario = '" + aUsuarios.getSelectedItem().toString() + "' AND ") + 
          (aCategorias.getSelectedIndex() == 0 ? "" : "velho = '" + aCategorias.getSelectedItem().toString() + "' AND ") +       
          (aOrigens.getSelectedIndex() == 0 ? "" : "origem = '" + aOrigens.getSelectedItem().toString() + "' AND ") + 
          (aMaquinas.getSelectedIndex() == 0 ? "" : "maquina = '" + aMaquinas.getSelectedItem().toString() + "' AND ") + 
          "datahora between '&1.' AND '&2.' order by datahora desc;";
        sSql = FuncoesGlobais.Subst(sSql, new String[] {
            Dates.DateFormata("yyyy-MM-dd", aDataIni.getDate()), 
            Dates.DateFormata("yyyy-MM-dd", aDataFim.getDate())
        });
        TableControl.Clear(aLista);
        
        if (!sSql.isEmpty()) {
            ResultSet rs = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            try {
                while (rs.next()) {
                    TableControl.add(aLista, new String[][]{
                        {
                            rs.getString("usuario").toUpperCase(), 
                            rs.getString("velho").toUpperCase(),
                            rs.getString("origem").toUpperCase(),
                            rs.getString("maquina").toUpperCase(),
                            Dates.DateFormata("dd-MM-yyyy HH:mm:ss", rs.getTimestamp("datahora")),
                            rs.getString("novo").toUpperCase()
                        },{
                            "L",
                            "L",
                            "L",
                            "L",
                            "C",
                            "L"
                        }
                    }, true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(rs);
        }        
    }//GEN-LAST:event_aBtnListarActionPerformed

    private void FillUsuarios() {
        String sSql = "SELECT DISTINCT usuario FROM auditor;";

        aUsuarios.removeAllItems();
        aUsuarios.addItem("TODOS");
        if (!sSql.isEmpty()) {
            ResultSet rs = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            try {
                while (rs.next()) {
                    aUsuarios.addItem(rs.getString("usuario").toUpperCase());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(rs);
        }
    }

    private void FillCategorias() {
        String sSql = "SELECT DISTINCT velho FROM auditor;";

        aCategorias.removeAllItems();
        aCategorias.addItem("TODOS");
        if (!sSql.isEmpty()) {
            ResultSet rs = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            try {
                while (rs.next()) {
                    aCategorias.addItem(rs.getString("velho").toUpperCase());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(rs);
        }
    }

    private void FillOrigens() {
        String sSql = "SELECT DISTINCT origem FROM auditor;";

        aOrigens.removeAllItems();
        aOrigens.addItem("TODOS");
        if (!sSql.isEmpty()) {
            ResultSet rs = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            try {
                while (rs.next()) {
                    aOrigens.addItem(rs.getString("origem").toUpperCase());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(rs);
        }
    }

    private void FillMaquinas() {
        String sSql = "SELECT DISTINCT maquina FROM auditor;";

        aMaquinas.removeAllItems();
        aMaquinas.addItem("TODOS");
        if (!sSql.isEmpty()) {
            ResultSet rs = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            try {
                while (rs.next()) {
                    aMaquinas.addItem(rs.getString("maquina").toUpperCase());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(rs);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aBtnListar;
    private javax.swing.JComboBox<String> aCategorias;
    private com.toedter.calendar.JDateChooser aDataFim;
    private com.toedter.calendar.JDateChooser aDataIni;
    private javax.swing.JTable aLista;
    private javax.swing.JComboBox<String> aMaquinas;
    private javax.swing.JComboBox<String> aOrigens;
    private javax.swing.JComboBox<String> aUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
